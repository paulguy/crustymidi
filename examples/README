Examples in this directory are provided for convenience and are all public
domain.

arpeggiator.cvm
  Will play any held notes in succession (ascending) based on a particular time.
  Interval can be overridden by defining INTERVAL on the command line.

major_chord.cvm
  Plays a major triad for any note input.

mandelbrot.cvm
  Doesn't work with crustymidi but with testcvm, it'll output an 8 bit output of
  a mandelbrot set.

metronome.cvm
  Periodically generates a midi note on and note off event, like a metronome.
  You can specify BPM on the command line, as well as the output CHANNEL, the
  NOTE and the note LENgth in milliseconds.

midi.inc
  Many expr defines and useful macro definitions for the MIDI protocol.  See the
  file itself for more information.

mididump.cvm
  Outputs a description of a MIDI event as it's received.  Useful for debugging.

minor_chord.cvm
  Like major_chord.cvm, plays a minor triad with any input.

push_toggle.cvm
  Toggles a MIDI note between on and off on any note on event.

split_keyboard.ccm
  Split a keyboard about middle C in to 2 ports.  Not adapted in to accepting
  command line arguments, but can be modified.

staccato.cvm
  Makes all note on events staccato by making all notes 100 ms long.  Also is
  note adapted to accepting command line arguments.

dx7.inc
  Some useful defines and macros for working with a DX7's parameter changes
  interface.  A little janky because it's meant to be used with cc_to_dx7.cvm
  and it uses some crustyvm features that I probably should've just not
  bothered with but oh well.

cc_to_dx7.cvm
  Translate midi CC messages to Yamaha DX7 voice parameter change messages.
  What maps to what is defined on the command line with -DCC_###=# where ###
  is the CC from 000 to 127 and # is the parameter number, typically from 0
  to 156.  No bounds or range checking or scaling is done.  This is just an
  early preliminary test and things may end up rewritten at a later time to be
  more featureful and robust.
